{"noir_version":"1.0.0-beta.6+e796dfd67726cbc28eb9991782533b211025928d","hash":"3467108030639443647","abi":{"parameters":[{"name":"age","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"nonce","type":{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"private"},{"name":"commitment","type":{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},"visibility":"public"},{"name":"min_age","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"}],"return_type":null,"error_types":{"6975439504536226484":{"error_kind":"fmtstring","length":53,"item_types":[{"kind":"integer","sign":"unsigned","width":32},{"kind":"integer","sign":"unsigned","width":32}]},"17363350551453339420":{"error_kind":"fmtstring","length":72,"item_types":[{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}},{"kind":"array","length":8,"type":{"kind":"integer","sign":"unsigned","width":32}}]}}},"bytecode":"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","debug_symbols":"nZPLqoMwEIbfJWsXuXnrqxwOEjWWQIiSmsJB+u5nzCS9LCylq89k/H6YYbKRUffh3Bk3zRdy+tlI74215tzZeVCrmR3cbreC5GO3eq3hijzVwVqU124lJxesLchV2RB/uizKRa7KQ5UWRLsRCIGTsXr/uhUPmx6rQvAkCynvevm5z5rs8/YbvxHJl5J94ctKZr+tj3x57HNKqxTAKROPhM8DWH0P4OVBwJsOKlomv2KvE/yFkxqMf9kZwhqYWkFYG8EpgiE4QiAkokRUiBrRxK54GyEogiE4QiAkokRACvQrakSDgJR9+FfljeqtTrs9BTc8rfr6t+RKfgyLnwc9Bq/3FmMNmv4H","file_map":{"50":{"source":"global SHA256_INIT_STATE: [u32; 8] = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19,\n];\n\nfn main(age: u32, nonce: [u32; 8], commitment: pub [u32; 8], min_age: pub u32) {\n    let mut preimage: [u32; 16] = [0; 16];\n    preimage[0] = age;\n    for i in 1..9 {\n        preimage[i] = nonce[i - 1];\n    }\n    let expected_commitment = (std::hash::sha256_compression(preimage, SHA256_INIT_STATE));\n    assert(\n        expected_commitment == commitment,\n        f\"commitment mismatch, \\nexpected: {expected_commitment} \\ngot: {commitment}\",\n    );\n\n    assert(age >= min_age, f\"age {age} is less than minimum required age {min_age}\");\n}\n","path":"/Users/ssup/Desktop/dev/zk-tutorials/beer-shop/circuit/src/main.nr"}},"names":["main"],"brillig_names":["directive_integer_quotient"]}